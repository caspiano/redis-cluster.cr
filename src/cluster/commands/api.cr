module Redis::Cluster::Commands
  SET = Set.new(%w(
    append
    bitcount
    bitop
    bitpos
    blpop
    brpop
    brpoplpush
    command
    counts
    decr
    decrby
    del
    dump
    exists
    expire
    expireat
    flushall
    get
    getbit
    getrange
    getset
    hdel
    hexists
    hget
    hgetall
    hincrby
    hincrbyfloat
    hkeys
    hlen
    hmget
    hmset
    hscan
    hset
    hsetnx
    hvals
    incr
    incrby
    incrbyfloat
    info
    keys
    lindex
    linsert
    llen
    lpop
    lpush
    lpushx
    lrange
    lrem
    lset
    ltrim
    mget
    mset
    msetnx
    persist
    pexpire
    pexpireat
    pfadd
    pfcount
    pfmerge
    psetex
    pttl
    randomkey
    rename
    renamenx
    rpop
    rpoplpush
    rpush
    rpushx
    sadd
    scan
    scard
    sdiff
    sdiffstore
    self
    set
    setbit
    setex
    setnx
    setrange
    sinter
    sinterstore
    sismember
    smembers
    smove
    spop
    srandmember
    srem
    sscan
    strlen
    sunion
    sunionstore
    ttl
    type
    zadd
    zcard
    zcount
    zincrby
    zinterstore
    zlexcount
    zrange
    zrangebylex
    zrangebyscore
    zrank
    zrem
    zremrangebylex
    zremrangebyrank
    zremrangebyscore
    zrevrange
    zrevrangebylex
    zrevrangebyscore
    zrevrank
    zscan
    zscore
    zunionstore
  ))

  def self.[]?(key)
    SET.includes?(key.to_s.downcase)
  end
end
